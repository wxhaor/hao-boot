<included>
    <property name="GENERAL_LOG_PATTERN" value="[%-5p] [%d{yyyy-MM-dd HH:mm:ss.SSS}] [%C#%method:%L] :%m%n"/>
    <property name="CONSOLE_LOG_PATTERN"
              value="%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%-5p){yellow} %clr(${PID}){magenta} %clr(%-40.40logger){cyan} :%clr(%m){faint}%n"/>

    <springProperty scope="context" name="CONTEXT_NAME" source="logging.contextName" defaultValue=""/>
    <springProperty scope="context" name="STASH_DESTINATION" source="logging.stash.destination" defaultValue=""/>
    <springProperty scope="context" name="STASH_TYPE" source="logging.stash.type" defaultValue=""/>

    <springProperty scope="context" name="MAX_FILE_SIZE" source="logging.rolling-policy.max-file-size"
                    defaultValue="200MB"/>
    <springProperty scope="context" name="MAX_HISTORY" source="logging.rolling-policy.max-history" defaultValue="500"/>
    <springProperty scope="context" name="TOTAL_SIZE_CAP" source="logging.rolling-policy.total-size-cap"
                    defaultValue="100GB"/>

    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex"
                    converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx"
                    converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>
    <!--    <conversionRule conversionWord="app" converterClass="com.niiwoo.tripod.base.logstash.ApplicationNameConverter"/>
        <conversionRule conversionWord="traceId" converterClass="com.niiwoo.tripod.base.logstash.TraceIdConverter"/>
        <conversionRule conversionWord="userId" converterClass="com.niiwoo.tripod.base.logstash.UserIdConverter"/>
        <conversionRule conversionWord="sessionId" converterClass="com.niiwoo.tripod.base.logstash.SessionIdConverter"/>-->

    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>DEBUG</level>
        </filter>
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>
    <appender name="debug-file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>DEBUG</level>
        </filter>
        <encoder>
            <pattern>${GENERAL_LOG_PATTERN}</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/DEBUG.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
            <maxHistory>${MAX_HISTORY}</maxHistory>
            <totalSizeCap>${TOTAL_SIZE_CAP}</totalSizeCap>
        </rollingPolicy>
    </appender>
    <appender name="info-file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder>
            <pattern>${GENERAL_LOG_PATTERN}</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/INFO.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
            <maxHistory>${MAX_HISTORY}</maxHistory>
            <totalSizeCap>${TOTAL_SIZE_CAP}</totalSizeCap>
        </rollingPolicy>
    </appender>
    <appender name="warn-file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>WARN</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder>
            <pattern>${GENERAL_LOG_PATTERN}</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/WARN.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
            <maxHistory>${MAX_HISTORY}</maxHistory>
            <totalSizeCap>${TOTAL_SIZE_CAP}</totalSizeCap>
        </rollingPolicy>
    </appender>
    <appender name="error-file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder>
            <pattern>${GENERAL_LOG_PATTERN}</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/ERROR.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
            <maxHistory>${MAX_HISTORY}</maxHistory>
            <totalSizeCap>${TOTAL_SIZE_CAP}</totalSizeCap>
        </rollingPolicy>
    </appender>
    <logger name="org.apache.zookeeper" level="WARN"/>
    <logger name="org.apache.curator.framework" level="INFO"/>
    <logger name="org.springframework.core.env" level="INFO"/>
    <logger name="org.springframework.beans.factory.support.DefaultListableBeanFactory" level="INFO"/>
    <logger name="org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader" level="INFO"/>
    <logger name="org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod" level="INFO"/>
    <logger name="org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor" level="INFO"/>
    <logger name="org.redisson.cluster.ClusterConnectionManager" level="INFO"/>
    <logger name="org.springframework.amqp.rabbit.listener.BlockingQueueConsumer" level="INFO"/>

    <logger name="org.apache.http.wire" level="INFO"/>
    <logger name="org.apache.http.headers" level="INFO"/>
    <logger name="com.netflix.discovery" level="INFO"/>
    <logger name="pache.http.impl.client" level="INFO"/>
    <logger name="e.http.impl.conn" level="INFO"/>
    <logger name="e.http.client.protocol" level="INFO"/>
    <logger name="he.http.client.protocol" level="INFO"/>

</included>